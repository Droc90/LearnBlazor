@page "/blazorjs"
@inject IJSRuntime _jSRuntime

<h3>Blazor JS</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Pending Confirmation</p>
    }
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="ToastrFailure">Toastr Failure</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetAlertFailure">SweetAlert Failure</button>
    <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetAlertWarning">SweetAlert Warning</button>
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click here?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult= await _jSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        //await _jSRuntime.InvokeVoidAsync("showToastr", "success", "This is a success message");
        await _jSRuntime.ToastrSuccess("This is a success message");
    }

    private async Task ToastrFailure()
    {
        //await _jSRuntime.InvokeVoidAsync("showToastr", "error", "This is a failure message");
        await _jSRuntime.ToastrError("This is an Error message");
    }

    private async Task SweetAlertSuccess()
    {
        await _jSRuntime.InvokeVoidAsync("showSwal", "success", "Task completed");
        //await _jSRuntime.ToastrSuccess("This is a success message");
    }

    private async Task SweetAlertFailure()
    {
        await _jSRuntime.InvokeVoidAsync("showSwal", "error", "Task Failed");
        //await _jSRuntime.ToastrError("This is an Error message");
    }

    private async Task SweetAlertWarning()
    {
        await _jSRuntime.InvokeVoidAsync("showSwal", "warning", "Better check on that");
        //await _jSRuntime.ToastrError("This is an Error message");
    }
}
